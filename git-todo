#!/bin/sh
set -e
  GIT_OPTS=""
  OUTPUT_FILTER="cat" # no-op
  RED=$(tput setaf 1)
  GREEN=$(tput setaf 2)
  TODO_FLAG='@todo';
  DONE_FLAG='@done'
  reset=$(tput sgr0)
  ifs=$IFS
  notes=""

# List all todos
show()
{
  IFS=""
  notes=$(git notes show);
  if [ $? -gt 0 ]; then return $?; fi;

  echo "$GREEN$DONE_FLAG$reset"
  echo $notes \
  | grep $DONE_FLAG \
  | sed -e "s/$DONE_FLAG//" \
  | while read -a task; do
    echo "$GREEN- [x]$reset${task}"
  done

  echo "$RED$TODO_FLAG$reset"
  echo $notes \
  | grep $TODO_FLAG \
  | sed -e "s/$TODO_FLAG//" \
  | while read -a task; do
    echo "$RED- [ ]$reset${task}"
  done
}

# Create a new Todo
add()
{
  git notes append -m "$TODO_FLAG $@"
}

# Get rid of a todo
remove()
{
  echo $@
}

# Commit a todo as finished
finish() {
  # Commit with todo as message
  # Copy notes from HEAD~1 to HEAD
  # move message from @todo to @done
  echo $@
}

help()
{
  echo "usage: git todo show";
  echo "   or: git todo add";
  echo "   or: git todo remove";
  echo "   or: git todo finish";
}

# list
IFS=$ifs
case $1 in
  'show')
    shift;
    show "$@" ;;
  'add')
    shift;
    add "$@" ;;
  'remove')
    shift;
    remove "$0" ;;
  'finish')
    shift;
    finish "$@" ;;
  'help')
    help;;
  *)
    echo "error: unknown subcommand: $1"
    help;;
esac
